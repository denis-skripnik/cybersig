{"version":3,"sources":["utils/cyberway.js","components/transactionView.js","components/parseErrorView.js","components/signingForm.js","components/showEosError.js","components/signing.js","navbar.js","templates/cyberway.js","components/templates/cyberway/bidname.js","components/templates/cyberway/bidrefund.js","components/templates/cyberway/transfer.js","components/templates/overview.js","components/templates/golos/upvote.js","components/templates/golos/delegate.js","App.js","serviceWorker.js","index.js"],"names":["HOST","sendTransaction","keys","trx","host","a","rpc","JsonRpc","signatureProvider","JsSignatureProvider","api","Api","textDecoder","TextDecoder","textEncoder","TextEncoder","transact","blocksBehind","expireSeconds","results","isWif","privWif","sha256","inp","crypto","createHash","update","digest","bufWif","Buffer","bs58","decode","privKey","slice","checksum","newChecksum","toString","e","getTableRows","data","fetch","get_table_rows","resp","rows","TransactionView","props","className","role","JSON","stringify","trJson","ParseErrorView","class","parseError","SigningForm","auths","defaultKeys","push","useState","setKeys","console","log","length","map","k","idx","KeyBlock","value","key","auth","onChange","v","newKey","newKeys","onClick","submit","type","setKey","keyStyle","setKeyStyle","htmlFor","id","placeholder","ev","target","actor","permission","ShowEosError","error","details","m","message","replace","what","Signing","result","setResult","setError","params","queryString","parse","window","location","search","tr","href","transaction_id","then","r","catch","json","extractAuths","actions","authorization","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","aria-haspopup","aria-labelledby","bidname","bidder","newname","bid","parseFloat","toFixed","bidrefund","transfer","from","to","amount","asset","memo","quantity","decs","symbol","QUERY_PARAM","code","scope","table","lower_bound","upper_bound","limit","index","encode_type","reverse","show_payer","BidName","setBidder","setNewname","setBid","bids","setBids","useEffect","fetchData","min","Math","ceil","high_bid","high_bidder","last_bid_time","ASSETS","GOLOS","CYBER","Transfer","setFrom","setTo","setAmount","setAsset","setMemo","Object","selected","CyberwayTemplates","GolosTemplates","TemplateOverview","GolosUpvote","GolosDelegate","App","exact","path","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4ae52e7d.chunk.js","sourcesContent":["\nimport { JsonRpc, Api } from 'cyberwayjs';\nimport { TextEncoder, TextDecoder } from 'text-encoding';\nimport JsSignatureProvider from 'cyberwayjs/dist/eosjs-jssig';\nimport crypto from \"crypto\";\nimport axios from \"axios\";\n\nimport bs58 from \"bs58\";\n\nconst HOST = 'https://node-cyberway.golos.io';\nconst HOST3 = 'http://localhost:8888';\n\nexport async function sendTransaction(keys, trx, host) {\n  const rpc = new JsonRpc(HOST);\n  const signatureProvider = new JsSignatureProvider(keys);\n\n  const api = new Api({\n    rpc,\n    signatureProvider,\n    textDecoder: new TextDecoder(),\n    textEncoder: new TextEncoder(),\n  });\n\n  const results = await api.transact(trx, {\n    blocksBehind: 5,\n    expireSeconds: 3600,\n  });\n\n  return results;\n}\n\n\nexport function isWif(privWif) {\n  var isWif = false;\n  const sha256 = (inp) => {\n    return crypto.createHash(\"sha256\").update(inp).digest();\n  }\n  try {\n    var bufWif = new Buffer(bs58.decode(privWif));\n    var privKey = bufWif.slice(0, -4);\n    var checksum = bufWif.slice(-4);\n    var newChecksum = sha256(privKey);\n    newChecksum = sha256(newChecksum);\n    newChecksum = newChecksum.slice(0, 4);\n    if (checksum.toString() == newChecksum.toString()) {\n      isWif = true;\n    }\n  } catch (e) {\n  }\n  return isWif;\n};\n\nexport async function getTableRows(data) {\n  \n    const rpc = new JsonRpc(HOST, { fetch });  \n\n    const resp = await rpc.get_table_rows(data);\n    if(resp.rows) {\n      return resp.rows;\n    }\n    return [];\n}\n","import React from \"react\";\n\nexport default \nfunction TransactionView(props) {    \n    return (\n        <div className=\"\">\n            <div className=\"alert alert-primary\" role=\"alert\">\n                <h4>Content</h4>\n            </div>\n            <div>\n                <pre  >\n                    {JSON.stringify(props.trJson, null, 2)}\n                </pre>\n            </div>\n        </div>\n    );\n}","import React from \"react\";\n\nexport default \nfunction ParseErrorView(props) {  \n    return (\n        <div className=\"p-2 border\">\n            <div className=\"alert alert-danger\" role=\"alert\">\n                <h4>Erroneous transaction</h4>\n            </div>\n            <div>\n                <p class=\" text-danger font-weight-bold\">{props.parseError}</p>\n            </div>\n        </div>\n    );\n}","import React, {useState} from \"react\";\nimport {isWif} from \"../utils/cyberway\";\n\n\nexport default\nfunction SigningForm(props) {\n    const {auths} = props;\n    const defaultKeys = [];\n    for(let a of auths) {defaultKeys.push(\"\");}\n\n    const [keys, setKeys] = useState(defaultKeys);\n\n    const onChange = (idx, newKey) => {\n        const newKeys = [...keys];\n        console.log(\"keys\", keys, \"newKeys\", newKeys, \"idx\", idx, \"newKey\", newKey);\n        newKeys[idx] = newKey;\n        console.log(\"newKeys\", newKeys);\n        setKeys(newKeys);\n    }\n    console.log(\"keys\", keys, keys.length);\n    return (\n        <form>\n            <div className=\"alert alert-primary\" role=\"alert\">\n                <h4>Signature</h4>\n            </div>\n            {keys.map((k,idx) => <KeyBlock value={k} key={\"\"+idx} auth={auths[idx]} onChange={(v) => onChange(idx, v)} />)}\n\n        <button onClick={() => props.submit(keys)} type=\"button\" className=\"btn btn-primary\">Submit</button>\n    </form>\n    );\n}\n\nfunction KeyBlock(props) {\n    const {auth} = props;\n\n    const [key, setKey] = useState(\"\");\n    const [keyStyle, setKeyStyle] = useState(\"form-control\")\n    \n    const onChangeKey = (ev) => {\n        const newKey = ev.target.value;\n        if(!isWif(newKey)) {\n            setKeyStyle(\"form-control is-invalid\");\n        } else {\n            setKeyStyle(\"form-control is-valid\");\n        }\n        setKey(newKey);\n        props.onChange(newKey);\n    }\n\n    return (\n        <div className=\"form-group\">\n            <label htmlFor=\"private_key\">Private key</label>\n            <input type=\"password\" className={keyStyle} id=\"private_key\" placeholder=\"Private key\" \n                value={key} onChange={onChangeKey}/>\n            <small id=\"passwordHelpBlock\" className=\"form-text text-muted\">\n                Private key for actor {auth.actor}, permission {auth.permission}\n            </small>\n        </div>\n    );\n}\n","import React from \"react\";\n\n\nexport default\nfunction ShowEosError(props) {\n    const error = props.error;\n\n    let details = [];\n    if(error.error.details) {\n        details.push(<hr key={\"hd\"}/>);\n        for(let d of error.error.details) {\n            let m = d.message;\n            m = m.replace(\"assertion failure with message: \", \"\");\n            details.push(<p key={m}>{m}</p>);\n            break;\n        }\n    }\n\n\n    return (\n        <div className=\"alert alert-danger\" role=\"alert\">\n        <h4 className=\"alert-heading\">{error.message}</h4>\n        <p>{error.error.what}</p>\n        {details}\n    </div>        \n    )\n}","\nimport React, { useState } from \"react\";\nimport queryString from \"query-string\";\nimport TransactionView from \"./transactionView\";\nimport ParseErrorView from \"./parseErrorView\";\nimport SigningForm from \"./signingForm\";\n\nimport { sendTransaction } from \"../utils/cyberway\";\nimport ShowEosError from \"./showEosError\";\n\nexport default\n    function Signing(props) {\n\n    const [result, setResult] = useState();\n    const [error, setError] = useState();\n\n    const params = queryString.parse(window.location.search);\n    let trJson = null;\n    let parseError = null;\n    if (params.tr) {\n        try {\n            trJson = JSON.parse(params.tr)\n        } catch (e) {\n            parseError = e + \"\";\n        }\n    }\n\n    if (parseError) {\n        return (<ParseErrorView parseError={parseError} />);\n    }\n\n    if (!trJson) {\n        return (<ParseErrorView parseError={\"Please provide parameter 'tr' with a transaction\"} />);\n    }\n\n    const doSubmit = (keys) => {\n        console.log(\"submit\", trJson);\n        sendTransaction(keys, trJson)\n            .then(r => setResult(r))\n            .catch(e => setError((!!e.json)? e.json : {error:{what:\"\"+e},message:\"Error while signing transaction!\"} ));\n    }\n    error && console.error(\"error\", error);\n    result && console.log(\"result\", result);\n    trJson && console.log(\"trJson\", trJson);\n\n    if (result) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-sm-12 p-2 border \">\n                        <div className=\"alert alert-success\" role=\"alert\">\n                            <h4 className=\"alert-heading\">Success</h4>\n                            <p>Transaction <a className=\"alert-link\" target=\"_blank\" href={\"https://explorer.cyberway.io/trx/\" + result.transaction_id}>{result.transaction_id}</a></p>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row mt-2\">\n                    <div className=\"col-sm-12 p-2 border \">\n                        <TransactionView trJson={trJson} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-sm-12 p-2 border \">\n                    <SigningForm submit={doSubmit} auths={extractAuths(trJson)} />\n                </div>\n            </div>\n            {error && (\n                <div className=\"row mt-2\">\n                    <div className=\"col-sm-12 p-2 border \">\n                        <ShowEosError error={error} />\n                    </div>\n                </div>\n            )}\n            <div className=\"row mt-2\">\n                <div className=\"col-sm-12 p-2 border \">\n                    <TransactionView trJson={trJson} />\n                </div>\n            </div>\n        </div>\n    );\n}\n\n\nfunction extractAuths(trJson) {\n    if(!trJson || !trJson.actions || !trJson.actions.length) return [];\n\n    const auths = [];\n    for(let a of trJson.actions) {\n        if(a.authorization && a.authorization.length) {\n            auths.push(...a.authorization);\n        }\n    }\n    return auths;\n}","import React from \"react\";\n\n\nexport default function NavBar(props) {\n\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light mb-2\">\n            <a className=\"navbar-brand\" href=\"/\">CyberSig</a>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item dropdown\">\n                        <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" \n                            role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                            Tools\n                        </a>\n                        <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                            <a className=\"dropdown-item\" href=\"/templates\">Templates</a>\n                            <a className=\"dropdown-item\" href=\"/exec\">Execute contract action</a>\n                            <div className=\"dropdown-divider\"></div>\n                            <a className=\"dropdown-item\" href=\"/create_key\">Create key</a>\n                            <a className=\"dropdown-item\" href=\"/associate\">Associate key</a>\n                        </div>\n                    </li>\n                </ul>\n            </div>\n            </nav>\n    );\n}","\n\nexport function bidname(bidder, newname, bid) {\n    \n    return {\n        \"actions\": [{\n            \"account\": \"cyber\",\n            \"name\": \"bidname\",\n            \"authorization\": [{\n                \"actor\": bidder,\n                \"permission\": \"active\"\n              }\n            ],\n            \"data\": {bidder, newname, bid:parseFloat(bid).toFixed(4) + \" CYBER\"}\n          }\n        ]\n    }\n}\n\nexport function bidrefund(bidder) {\n  return {\n      \"actions\": [{\n          \"account\": \"cyber\",\n          \"name\": \"bidrefund\",\n          \"authorization\": [{\n              \"actor\": bidder,\n              \"permission\": \"active\"\n            }\n          ],\n          \"data\": {bidder}\n        }\n      ]\n  }\n}\n\nexport function transfer(from, to, amount, asset, memo) {\n  \n  const quantity = parseFloat(amount).toFixed(asset.decs) + \" \" + asset.symbol;\n\n  return {\n      \"actions\": [{\n          \"account\": \"cyber.token\",\n          \"name\": \"transfer\",\n          \"authorization\": [{\n              \"actor\": from,\n              \"permission\": \"active\"\n            }\n          ],\n          \"data\": {from, to, quantity, memo}\n        }\n      ]\n  }\n}\n\n","import React, { useState, useEffect } from \"react\";\nimport { bidname } from \"../../../templates/cyberway\"\nimport { Link } from \"react-router-dom\"\nimport {getTableRows} from \"../../../utils/cyberway\";\n\nconst QUERY_PARAM = {\n        json: true,\n        code: \"cyber\",\n        scope: \"cyber\",\n        table: \"namebids\",\n        lower_bound: null,\n        upper_bound: null,\n        limit: 50,\n        index: \"highbid\",\n        encode_type: \"dec\",\n        reverse: false,\n        show_payer: false                   \n};\n\nexport default\n    function BidName(props) {\n\n    const [bidder, setBidder] = useState(\"\");\n    const [newname, setNewname] = useState(\"\");\n    const [bid, setBid] = useState(0);\n    const [bids, setBids] = useState([]);\n\n    useEffect(() => {\n        async function fetchData() {\n            try {\n                const data = await getTableRows(QUERY_PARAM);\n                console.log(data)\n                setBids(data);\n            } catch(e) {\n\n            }\n        }\n        fetchData();\n    }, []);\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-sm-12 border\">\n            <form>\n                <div className=\"alert alert-primary\" role=\"alert\">\n                    <h4>Bid for name</h4>\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"bidder\">Bidder</label>\n                    <input type=\"text\" className=\"form-control\" id=\"bidder\" placeholder=\"cyberway account\"\n                        value={bidder} onChange={(ev) => setBidder(ev.target.value)} />\n                    <small id=\"bidderHelpBlock\" className=\"form-text text-muted\">\n                        Cyberway account\n                </small>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"newname\">New name</label>\n                    <input type=\"text\" className=\"form-control\" id=\"newname\" placeholder=\"new cyberway name\"\n                        value={newname} onChange={(ev) => setNewname(ev.target.value)} />\n                    <small id=\"bidderHelpBlock\" className=\"form-text text-muted\">\n                        New cyberway name, max 12 characters. Only following characters are allowed: \"12345abcdefghijklmnopqrstuvwxyz\"\n                </small>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"bid\">Bid</label>\n                    <input type=\"number\" min=\"0\" className=\"form-control\" id=\"bid\" placeholder=\"bid amount\"\n                        value={bid} onChange={(ev) => setBid(ev.target.value)} />\n                    <small id=\"bidderHelpBlock\" className=\"form-text text-muted\">\n                        Bid amount.\n                </small>\n                </div>\n                <Link to={\"/signing?tr=\" + JSON.stringify(bidname(bidder, newname, bid))} type=\"button\" className=\"btn btn-primary\">Sign</Link>\n            </form>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-sm-12 border mt-3\">\n                <div className=\"alert alert-primary\" role=\"alert\">\n                    <h4>Bid queue</h4>\n                </div>\n                <table className=\"table table-sm table-striped table-hover\">\n                    <thead>\n                    <tr>\n                        <th scope=\"col\">Name</th>\n                        <th scope=\"col\">Bidder</th>\n                        <th scope=\"col\">Bid</th>\n                        <th scope=\"col\">Bid time</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {bids.map(bid => {\n                        return (<tr key={bid.newname} onClick={() => {setNewname(bid.newname); setBid(Math.ceil(bid.high_bid * 1.1) / 10000)}}>\n                            <td>{bid.newname}</td>\n                            <td>{bid.high_bidder}</td>\n                            <td className=\"text-right\">{(bid.high_bid / 10000).toFixed(4) + \" CYBER\" }</td>\n                            <td>{bid.last_bid_time}</td>\n                        </tr>\n\n                    )})\n                    \n                    }\n                    </tbody>\n                </table>\n                </div>\n            </div>\n        </div>\n\n    );\n\n}","import React, { useState, useEffect } from \"react\";\nimport { bidrefund } from \"../../../templates/cyberway\"\nimport { Link } from \"react-router-dom\"\n\nexport default\n    function BidName(props) {\n\n    const [bidder, setBidder] = useState(\"\");\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-sm-12 border\">\n                    <form>\n                        <div className=\"alert alert-primary\" role=\"alert\">\n                            <h4>Refund lost bids</h4>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"bidder\">Bidder</label>\n                            <input type=\"text\" className=\"form-control\" id=\"bidder\" placeholder=\"cyberway account\"\n                                value={bidder} onChange={(ev) => setBidder(ev.target.value)} />\n                            <small id=\"bidderHelpBlock\" className=\"form-text text-muted\">\n                                Cyberway account\n                            </small>\n                        </div>\n                        <Link to={\"/signing?tr=\" + JSON.stringify(bidrefund(bidder))} type=\"button\" className=\"btn btn-primary\">Sign</Link>\n                    </form>\n                </div>\n            </div>\n        </div>\n\n    );\n\n}","import React, { useState, useEffect } from \"react\";\nimport { transfer } from \"../../../templates/cyberway\"\nimport { Link } from \"react-router-dom\"\n\nconst ASSETS = {\n    GOLOS: {decs: 3, symbol: \"GOLOS\"},\n    CYBER: {decs: 4, symbol: \"CYBER\"},\n};\n\nexport default\n    function Transfer(props) {\n\n    const [from, setFrom] = useState(\"\");\n    const [to, setTo] = useState(\"\");\n    const [amount, setAmount] = useState();\n    const [asset, setAsset] = useState(\"CYBER\");\n    const [memo, setMemo] = useState(\"\");\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-sm-12 border\">\n            <form className=\"p-2\">\n                <div className=\"alert alert-primary\" role=\"alert\">\n                    <h4>Transfer</h4>\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"from\">From</label>\n                    <input type=\"text\" className=\"form-control form-control-sm\" id=\"from\" placeholder=\"cyberway account\"\n                        value={from} onChange={(ev) => setFrom(ev.target.value)} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"to\">To</label>\n                    <input type=\"text\" className=\"form-control form-control-sm\" id=\"to\" placeholder=\"cyberway account\"\n                        value={to} onChange={(ev) => setTo(ev.target.value)} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"amount\">Amount</label>\n                    <input type=\"number\" min=\"0\" className=\"form-control form-control-sm\" id=\"bid\" placeholder=\"bid amount\"\n                        value={amount} onChange={(ev) => setAmount(ev.target.value)} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"asset\">Asset</label>\n                    <select className=\"form-control form-control-sm\" onChange={(ev) => setAsset(ev.target.value)}>\n                        {Object.keys(ASSETS).map(a => {\n                            return (\n                                <option value={a} selected={asset == a}>{a}</option>\n                            );\n                        })}\n                    </select>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"memo\">To</label>\n                    <input type=\"text\" className=\"form-control form-control-sm\" id=\"memo\" placeholder=\"memo\"\n                        value={memo} onChange={(ev) => setMemo(ev.target.value)} />\n                </div>\n                <Link to={\"/signing?tr=\" + JSON.stringify(transfer(from, to, amount, ASSETS[asset], memo))} type=\"button\" className=\"btn btn-primary\">Sign</Link>\n            </form>\n                </div>\n            </div>\n        </div>\n\n    );\n\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\"\n\nfunction CyberwayTemplates() {\n    return (\n        <div className=\"card-body\">\n            <div className=\"row\">\n                <div className=\"col-sm-4\">\n                    <Link to={\"/templates/cyberway/transfer\"}>transfer</Link>\n                </div>\n                <div className=\"col-sm-4\">\n                    <div><Link to={\"/templates/cyberway/bidname\"}>bidname</Link></div>\n                    <div><Link to={\"/templates/cyberway/bidrefund\"}>bidrefund</Link></div>\n                </div>\n                <div className=\"col-sm-4\">\n                </div>\n            </div>\n        </div>\n    )\n}\n\nfunction GolosTemplates() {\n    return (\n        <div className=\"card-body\">\n            <div><Link to={\"/templates/golos/upvote\"}>upvote</Link></div>\n            <div><Link to={\"/templates/golos/delegate\"}>delegate</Link></div>\n        </div>\n    )\n}\n\nexport default \nfunction TemplateOverview(props) {\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-sm-6 mb-3\">\n                    <h3>Transaction templates</h3>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-sm-6 mb-3\">\n                    <div className=\"card\">\n                        <div className=\"card-header\">\n                            <h4>Cyberway</h4>\n                        </div>                    \n                        <CyberwayTemplates />\n                    </div>\n                </div>\n                <div className=\"col-sm-6 mb-3\">\n                    <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h4>Golos</h4>\n                            </div>                    \n                            <GolosTemplates />\n                        </div>\n                    </div>\n            </div>\n        </div>\n    );\n\n}","import React from \"react\";\n\n\nexport default\nfunction GolosUpvote() {\n    return (\n        <div>\n            Upvote\n        </div>\n\n    );\n}","import React from \"react\";\n\n\nexport default\nfunction GolosDelegate() {\n    return (\n        <div>\n            Delegate\n        </div>\n\n    );\n}","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\"\n\nimport Signing from \"./components/signing\";\nimport NavBar from \"./navbar\";\n\n\nimport Bidname from \"./components/templates/cyberway/bidname\";\nimport Bidrefund from \"./components/templates/cyberway/bidrefund\";\nimport Transfer from \"./components/templates/cyberway/transfer\";\nimport TempaltesOverview from \"./components/templates/overview\"\n\nimport GolosUpvote from \"./components/templates/golos/upvote\";\nimport GolosDelegate from \"./components/templates/golos/delegate\";\n\nfunction App(props) {\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-sm-12\">\n          <NavBar />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-sm-12\">\n          <div>\n            <Router>\n              <Switch>\n                <Route exact path=\"/\">\n                  <h1>Signing tool for cyberway!</h1>\n                </Route>\n                <Route exact path=\"/signing\">\n                  <Signing props={{ ...props }} />\n                </Route>\n                <Route exact path=\"/templates/\">\n                  <TempaltesOverview props={{ ...props }} />\n                </Route>\n                <Route exact path=\"/templates/cyberway/bidname\">\n                  <Bidname props={{ ...props }} />\n                </Route>\n                <Route exact path=\"/templates/cyberway/bidrefund\">\n                  <Bidrefund props={{ ...props }} />\n                </Route>\n                <Route exact path=\"/templates/cyberway/transfer\">\n                  <Transfer props={{ ...props }} />\n                </Route>\n                <Route exact path=\"/templates/golos/upvote\">\n                  <GolosUpvote props={{ ...props }} />\n                </Route>\n                <Route exact path=\"/templates/golos/delegate\">\n                  <GolosDelegate props={{ ...props }} />\n                </Route>\n              </Switch>\n            </Router>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}